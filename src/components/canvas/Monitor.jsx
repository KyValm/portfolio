/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 monitor.gltf --transform
Author: tanjii (https://sketchfab.com/kam1sh)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/monitor-221b58bcbddf4fa9892d63797034fb9c
Title: Monitor
*/

import React, { Suspense, useRef } from 'react'
import { Canvas } from "@react-three/fiber";
import {
    Decal,
    Float,
    OrbitControls,
    Preload,
    useTexture,
    useGLTF

  } from "@react-three/drei";
  
import CanvasLoader from "../Loader";

const Computer = (props) => {
  const { nodes, materials } = useGLTF('/monitor-transformed.glb');
  const [decal] = useTexture([props.imgUrl]);
  return (
    <Float speed={1.75} rotationIntensity={1} floatIntensity={2}>
      <ambientLight intensity={0.25} />
        <directionalLight position={[0, 0, 0.05]} />
          <group {...props} dispose={null} rotation={[0, Math.PI, 0]}>
            <group scale={0.015}>
              <mesh geometry={nodes['������_����������������_0'].geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={[100, 4.65, 67.55]}/>       
              <mesh geometry={nodes['������001_����������������001_0'].geometry} material={materials['.001']} position={[-40, 60.33, -4.37]} rotation={[-Math.PI / 2, 0, 0]} scale={0.565}/>       
              <mesh geometry={nodes['������002_����������������002_0'].geometry} material={materials['.002']} position={[-40, 54.18, -4.37]} rotation={[-Math.PI / 2, 0, 0]} scale={0.565} />
              <mesh geometry={nodes['������003_����������������003_0'].geometry} material={materials['.003']} position={[0, 0, 26.87]} rotation={[-Math.PI / 2, 0, 0]} scale={[100, 4.65, 67.55]}/>
            </group>
          </group>
    </Float>
  )
}

const ComputerCanvas = ({ icon }) => {
  return (
   <Canvas
          frameloop='demand'
          dpr={[1, 2]}
          gl={{ preserveDrawingBuffer: true }}>
          <Suspense fallback={<CanvasLoader/>}>
            <OrbitControls enableZoom={false} />
            <Computer imgUrl={icon} />
          </Suspense>
          <Preload all />
        </Canvas>
      );
    };

useGLTF.preload('/scene-transformed.glb');
export default ComputerCanvas;